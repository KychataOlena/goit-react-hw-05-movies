{"version":3,"file":"static/js/666.4226ba67.chunk.js","mappings":"gMAEaA,E,QAAaC,EAAAA,IAAH,4D,SCCVC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,mLCfYC,EAAkBT,EAAAA,EAAAA,OAAH,4ZAiBfU,EAAaV,EAAAA,EAAAA,KAAH,8KASVW,EAAkBX,EAAAA,EAAAA,MAAH,2PAcfY,EAAaZ,EAAAA,EAAAA,OAAH,oYAgBVa,EAAYb,EAAAA,EAAAA,GAAH,sNASTc,EAAgBd,EAAAA,EAAAA,GAAH,4SAYbe,EAAWf,EAAAA,EAAAA,EAAH,4FAKRgB,EAAWhB,EAAAA,EAAAA,IAAH,+DAIRiB,GAAYjB,EAAAA,EAAAA,GAAOkB,EAAAA,GAAPlB,CAAH,mE,SCyBtB,EA5Fe,WACb,OAA0BmB,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SA8C/B,OA1BAC,EAAAA,EAAAA,YAAU,WACM,OAAVF,IAGJJ,GAAW,GACXN,EAAS,IAETa,MAAM,qDAAD,OACkDC,EAAAA,EADlD,kBACmEJ,EADnE,+CAGFK,MAAK,SAAAhB,GAAK,OAAIA,EAAMiB,MAAV,IACVD,MAAK,SAAAhB,GAEJ,IAAMkB,EAAalB,EAAMmB,QAAQC,KAC/B,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAEzB,MAAO,CAAEH,GAAAA,EAAIC,YAAAA,EAAaG,WADTF,GAASC,EAE3B,IAEHvB,EAASiB,EACV,IACAQ,SAAQ,WACPnB,GAAW,EACZ,IACJ,GAAE,CAACI,KAGF,iCACE,SAACtB,EAAD,WACE,UAACC,EAAD,CAAYqC,SA1CG,SAAAC,GACnBA,EAAMC,iBAEqB,KAAvB3B,EAAY4B,QAKhBpB,EAAgB,CAAEC,MAAOT,IAEzBC,EAAe,KANb4B,EAAAA,GAAAA,MAAY,wBAOf,EA+BK,WACE,SAACxC,EAAD,CACEyC,MAAM,QACNR,KAAK,aACLS,KAAK,OACLC,aAAa,MACbC,WAAS,EAETC,MAAOlC,EACPmC,SAvDW,SAAAC,GACnBnC,EAAemC,EAAEC,cAAcH,MAAMI,cACtC,KAuDO,SAAChD,EAAD,CAAYyC,KAAK,SAAjB,0BAGJ,yBACGjC,IACC,SAACP,EAAD,UACGO,EAAMoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaG,EAApB,EAAoBA,WAApB,OACT,SAAC/B,EAAD,WACE,UAACG,EAAD,CAAW4C,GAAE,UAAKpB,GAAMqB,MAAO,CAAEC,KAAMvC,GAAvC,WACE,SAACR,EAAD,CACEgD,IAAG,UAAKC,EAAAA,GAAL,OAAoBvB,GACvBwB,IAAI,MAEN,SAACnD,EAAD,UAAW8B,QANKJ,EADX,SAcjB,SAAC,KAAD,CAAgB0B,UAAW,IAAMC,MAAM,YACtC1C,IAAW,SAACzB,EAAA,EAAD,MAGjB,C,8EChHM,IAAMkC,EAAU,mCACV8B,EAAe,kC","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderRing = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { LoaderRing } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderRing>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderRing>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const SearchbarHeader = styled.header`\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const FormButton = styled.button`\n   display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 54px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 16px;\n  margin: 0px auto;\n  padding: 0px;\n  list-style: none;\n`;\nexport const MovieLiSearch = styled.li`\n  max-width: 370px;\n  border: 1px solid #eeeeee;\n  background: #ffffff;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 3px 0px,\n    rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px;\n\n  margin-right: 30px;\n  margin-bottom: 30px;\n  margin-top: 30px;\n`;\n\nexport const FilmName = styled.p`\n  font-size: 1.25rem;\n  line-height: 1.35;\n  text-align: center;\n`;\nexport const MovieImg = styled.img`\n  display: block;\n  max-width: 100%;\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n// import { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { API_KEY, BASE_IMG_URL } from 'services';\nimport {\n  SearchbarHeader,\n  SearchForm,\n  SearchFormInput,\n  FormButton,\n  MovieList,\n  MovieLiSearch,\n  FilmName,\n  MovieImg,\n  MovieLink,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n  const [searchMovie, setSearchMovie] = useState('');\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  // console.log(query);\n\n  const handleChange = e => {\n    setSearchMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchMovie.trim() === '') {\n      toast.error('Something went wrong!');\n      return;\n    }\n    // const form = event.currentTarget;\n    setSearchParams({ query: searchMovie });\n\n    setSearchMovie('');\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n    setLoading(true);\n    setMovie([]);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    )\n      .then(movie => movie.json())\n      .then(movie => {\n        // console.log(movie.results);\n        const movieArray = movie.results.map(\n          ({ id, poster_path, title, name }) => {\n            let movieTitle = title || name;\n            return { id, poster_path, movieTitle };\n          }\n        );\n        setMovie(movieArray);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [query]);\n\n  return (\n    <>\n      <SearchbarHeader>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormInput\n            class=\"input\"\n            name=\"searchName\"\n            type=\"text\"\n            autocomplete=\"off\"\n            autofocus\n            // placeholder=\"Search images and photos\"\n            value={searchMovie}\n            onChange={handleChange}\n          ></SearchFormInput>\n          <FormButton type=\"submit\">Search</FormButton>\n        </SearchForm>\n      </SearchbarHeader>\n      <div>\n        {movie && (\n          <MovieList>\n            {movie.map(({ id, poster_path, movieTitle }) => (\n              <MovieLiSearch key={id}>\n                <MovieLink to={`${id}`} state={{ from: location }}>\n                  <MovieImg\n                    src={`${BASE_IMG_URL}${poster_path}`}\n                    alt=\"\"\n                  ></MovieImg>\n                  <FilmName>{movieTitle}</FilmName>\n                </MovieLink>\n              </MovieLiSearch>\n            ))}\n          </MovieList>\n        )}\n      </div>\n      <ToastContainer autoClose={3000} theme=\"colored\" />\n      {loading && <Loader />}\n    </>\n  );\n};\nexport default Movies;\n","export const API_KEY = '37c19565ff9fd1caddc6961e74d76e1e';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n"],"names":["LoaderRing","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","SearchbarHeader","SearchForm","SearchFormInput","FormButton","MovieList","MovieLiSearch","FilmName","MovieImg","MovieLink","Link","useState","movie","setMovie","searchMovie","setSearchMovie","location","useLocation","loading","setLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetch","API_KEY","then","json","movieArray","results","map","id","poster_path","title","name","movieTitle","finally","onSubmit","event","preventDefault","trim","toast","class","type","autocomplete","autofocus","value","onChange","e","currentTarget","toLowerCase","to","state","from","src","BASE_IMG_URL","alt","autoClose","theme"],"sourceRoot":""}