{"version":3,"file":"static/js/33.51d1021e.chunk.js","mappings":"+LAEaA,E,QAAaC,EAAAA,IAAH,4D,SCCVC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,qKCdYC,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,wdAuBVW,EAAaX,EAAAA,EAAAA,GAAH,8DAKVY,EAAgBZ,EAAAA,EAAAA,IAAH,iGAKba,EAAab,EAAAA,EAAAA,IAAH,2DAKVc,EAAmBd,EAAAA,EAAAA,GAAH,gFAMhBe,GAAWf,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,oQAeRgB,EAAYhB,EAAAA,EAAAA,GAAH,+C,SCuBtB,EAtEqB,WAAO,IAAD,IACnBiB,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOG,EAAP,KAAcC,EAAd,KACMC,EAAU,oBAAGT,EAASU,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE3CC,EAAAA,EAAAA,YAAU,WACRN,GAAW,GACXO,MAAM,wCAAD,OAC4BX,EAD5B,oBAC+CY,EAAAA,EAD/C,oBAEFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAR,GACJ,IAAQW,EAAuDX,EAAvDW,MAAOC,EAAgDZ,EAAhDY,aAAcC,EAAkCb,EAAlCa,YAAaC,EAAqBd,EAArBc,OAAQC,EAAaf,EAAbe,SAClDd,EAAS,CAAEU,MAAAA,EAAOC,aAAAA,EAAcC,YAAAA,EAAaC,OAAAA,EAAQC,SAAAA,GACtD,IACAC,SAAQ,WACPjB,GAAW,EACZ,GACJ,GAAE,CAACJ,IAEJ,IAAQgB,EAAuDX,EAAvDW,MAAOC,EAAgDZ,EAAhDY,aAAcC,EAAkCb,EAAlCa,YAAaC,EAAqBd,EAArBc,OAAQC,EAAaf,EAAbe,SAElD,OACE,6BACE,SAAC9B,EAAD,CAAYgC,GAAIf,EAAhB,sBACA,4BACE,UAACd,EAAD,YACE,4BACE,SAACD,EAAD,UAAawB,KACb,SAACtB,EAAD,CAAY6B,IAAG,UAAKC,EAAAA,GAAL,OAAoBN,GAAeO,IAAI,eAGxD,4BACE,uCAAeR,MACf,uCACA,uBAAIG,KACJ,oCACA,SAACzB,EAAD,UACGwB,GACCA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,SAAC/B,EAAD,WACE,uBAAI+B,KADUD,EADP,OAMf,oDACA,UAAChC,EAAD,YACE,SAACE,EAAD,WACE,SAACD,EAAD,CAAU0B,GAAG,OAAOd,MAAO,CAAEC,KAAMF,GAAnC,qBAIF,SAACV,EAAD,WACE,SAACD,EAAD,CAAU0B,GAAG,UAAUd,MAAO,CAAEC,KAAMF,GAAtC,iCAOR,SAAC,EAAAsB,SAAD,WACE,SAAC,KAAD,SAGH1B,IAAW,SAACrB,EAAA,EAAD,MAGjB,C,8ECnFM,IAAM8B,EAAU,mCACVY,EAAe,kC","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderRing = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { LoaderRing } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderRing>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderRing>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 6px 22px;\n  margin-right: 8px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  min-width: 40px;\n  min-height: 24px;\n  border: 1px solid black;\n  border-radius: 32px;\n  text-align: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  text-decoration: none;\n  line-height: 1.62;\n  color: black;\n  :hover {\n    border: 1px solid rgb(226, 43, 43);\n    color: rgb(226, 43, 43);\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n  margin-top: 0;\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nexport const MainPoster = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const MovieDetailsList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0px;\n`;\n\nexport const CastLink = styled(Link)`\n  display: inline-block;\n  padding: 6px 22px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid black;\n  border-radius: 32px;\n  text-align: center;\n\n  :hover {\n    color: rgb(226, 43, 43);\n  }\n`;\n\nexport const MovieItem = styled.li`\n  margin-right: 10px;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { API_KEY, BASE_IMG_URL } from 'services';\nimport { Suspense } from 'react';\nimport {\n  StyledLink,\n  MovieTitle,\n  FlexContainer,\n  MainPoster,\n  MovieDetailsList,\n  CastLink,\n  MovieItem,\n} from 'pages/MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const backButton = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(res => res.json())\n      .then(movie => {\n        const { title, vote_average, poster_path, genres, overview } = movie;\n        setMovie({ title, vote_average, poster_path, genres, overview });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  const { title, vote_average, poster_path, genres, overview } = movie;\n\n  return (\n    <main>\n      <StyledLink to={backButton}>Go back</StyledLink>\n      <div>\n        <FlexContainer>\n          <div>\n            <MovieTitle>{title}</MovieTitle>\n            <MainPoster src={`${BASE_IMG_URL}${poster_path}`} alt=\"Poster\" />\n          </div>\n\n          <div>\n            <p>User scor: {vote_average}</p>\n            <h2>Overview </h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <MovieDetailsList>\n              {genres &&\n                genres.map(({ id, name }) => (\n                  <MovieItem key={id}>\n                    <p>{name}</p>\n                  </MovieItem>\n                ))}\n            </MovieDetailsList>\n            <h3>Additional information</h3>\n            <MovieDetailsList>\n              <MovieItem>\n                <CastLink to=\"cast\" state={{ from: backButton }}>\n                  Cast\n                </CastLink>\n              </MovieItem>\n              <MovieItem>\n                <CastLink to=\"reviews\" state={{ from: backButton }}>\n                  Reviews\n                </CastLink>\n              </MovieItem>\n            </MovieDetailsList>\n          </div>\n        </FlexContainer>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","export const API_KEY = '37c19565ff9fd1caddc6961e74d76e1e';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n"],"names":["LoaderRing","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","StyledLink","Link","MovieTitle","FlexContainer","MainPoster","MovieDetailsList","CastLink","MovieItem","location","useLocation","movieId","useParams","useState","loading","setLoading","movie","setMovie","backButton","state","from","useEffect","fetch","API_KEY","then","res","json","title","vote_average","poster_path","genres","overview","finally","to","src","BASE_IMG_URL","alt","map","id","name","Suspense"],"sourceRoot":""}